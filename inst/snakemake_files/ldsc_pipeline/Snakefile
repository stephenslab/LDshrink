import os
gardner_dir="../../../../../../../../group/xhe-lab/1KG/"
if os.path.exists(gardner_dir):
    configpath="../workflow_params_gardner.json"
else:
    configpath="../workflow_params.json"
    
configfile:
    configpath

#Directory that will serve as base directory for this project (good idea to use scratch storage)
KG_dir="../"+config["KG_DIRECTORY"]

#Directory that holds "raw" 1000 genomes vcf files (I think this already exists in the `compbio` folder in the `RSS` folder)
VCF_DIR="../"+config["VCF_DIR"]

#Directory that holds the haplotype and genotype `.gds` which are population specific (i.e EUR), and have had an allele frequency cutoff applied (i.e 0.05)
GDS_DIR="../"+config["GDS_DIR"]

#Directory that holds the 1000 genomes genetic map files (you can get these off github, google 1000 genomes genetic maps)
KG_MAPDIR="../"+config["KG_MAPDIR"]


# File that has the LDetect LD breakpoints
#URL for that file is here #LD_break_file_url="https://bitbucket.org/nygcresearch/ldetect-data/raw/ac125e47bf7ff3e90be31f278a7b6a61daaba0dc/EUR/fourier_ls-all.bed"
LD_break_file="../"+config["LDETECT_BREAK_FILE"]






rule all:
    input:
        "../scz_RSSp_res.txt",
        "../scz_LD_regions.txt"
       

rule gwas_subset:
    input:
        inputf="../scz_ldsc_ex2.txt",
        geno_gdsf=GDS_DIR+"ALL_seq_hapmap.gds"
    params:
        traitn="scz"
    output:
        outf=dynamic("../chunks_scz/{LDchunk}_ldsc_sub.txt")
    script:
        "../ldsc_scripts/gwas_subset.R"

        
rule quh_subset:
    input:
        gwasf="../chunks_scz/{LDchunk}_ldsc_sub.txt",
    params:
       evdf=KG_dir+"EVD_H5/1KG_hapmap_{LDchunk}.h5"
    output:        
        output_gwasf="../quh_scz/{LDchunk}_quh.txt"
    script:
        "../ldsc_scripts/gen_quh.R"

rule merge_quh_subset:
    input:
        quhf=dynamic("../quh_scz/{LDchunk}_quh.txt")
    output:
        quhf="../quh_scz.txt.gz"
        
    script:
        "../ldsc_scripts/merge_quh.R"

rule RSSp_est_quh:
    input:
        quhf="../quh_{trait}.txt.gz"
    params:
        traitn="{trait}"
    output:
        RSSp_resf="../{trait}_RSSp_res.txt"
    script:
        "../ldsc_scripts/RSSp_quh.R"
    
        
rule trait_subset_gds:
    input:
        haplo_gdsf=GDS_DIR+"ALL_seq_hapmap.gds",
        geno_gdsf=GDS_DIR+"ALL_seq_hapmap_geno.gds",
        traitf="quh_{trait}.txt.gz"
    output:
        haplo_gdsf=GDS_DIR+"{trait}_seq_hapmap.gds",
        geno_gdsf=GDS_DIR+"{trait}_seq_hapmap_geno.gds"
    script:
        "../scripts/trait_subset.R"

rule trait_LD_regions:
    input:
        gdsf=GDS_DIR+"{trait}_seq_hapmap.gds"
    output:
        unique_f="../{trait}_LD_regions.txt"
    script:
        "../scripts/LD_regions.R"
