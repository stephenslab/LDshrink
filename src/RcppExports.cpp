// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppEigen.h>
#include <Rcpp.h>

using namespace Rcpp;

// ldshrink_cor
SEXP ldshrink_cor(const Rcpp::NumericMatrix genotype_data, const Rcpp::NumericVector anno, const Rcpp::List options);
RcppExport SEXP _ldshrink_ldshrink_cor(SEXP genotype_dataSEXP, SEXP annoSEXP, SEXP optionsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const Rcpp::NumericMatrix >::type genotype_data(genotype_dataSEXP);
    Rcpp::traits::input_parameter< const Rcpp::NumericVector >::type anno(annoSEXP);
    Rcpp::traits::input_parameter< const Rcpp::List >::type options(optionsSEXP);
    rcpp_result_gen = Rcpp::wrap(ldshrink_cor(genotype_data, anno, options));
    return rcpp_result_gen;
END_RCPP
}
// sample_cor
SEXP sample_cor(const Rcpp::NumericMatrix genotype_data, const Rcpp::NumericVector anno, const Rcpp::List options);
RcppExport SEXP _ldshrink_sample_cor(SEXP genotype_dataSEXP, SEXP annoSEXP, SEXP optionsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const Rcpp::NumericMatrix >::type genotype_data(genotype_dataSEXP);
    Rcpp::traits::input_parameter< const Rcpp::NumericVector >::type anno(annoSEXP);
    Rcpp::traits::input_parameter< const Rcpp::List >::type options(optionsSEXP);
    rcpp_result_gen = Rcpp::wrap(sample_cor(genotype_data, anno, options));
    return rcpp_result_gen;
END_RCPP
}
// flip_allele
Rcpp::LogicalVector flip_allele(const Rcpp::IntegerVector& gwas_ref, const Rcpp::IntegerVector& gwas_alt, const Rcpp::IntegerVector& ld_ref, const Rcpp::IntegerVector& ld_alt);
RcppExport SEXP _ldshrink_flip_allele(SEXP gwas_refSEXP, SEXP gwas_altSEXP, SEXP ld_refSEXP, SEXP ld_altSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const Rcpp::IntegerVector& >::type gwas_ref(gwas_refSEXP);
    Rcpp::traits::input_parameter< const Rcpp::IntegerVector& >::type gwas_alt(gwas_altSEXP);
    Rcpp::traits::input_parameter< const Rcpp::IntegerVector& >::type ld_ref(ld_refSEXP);
    Rcpp::traits::input_parameter< const Rcpp::IntegerVector& >::type ld_alt(ld_altSEXP);
    rcpp_result_gen = Rcpp::wrap(flip_allele(gwas_ref, gwas_alt, ld_ref, ld_alt));
    return rcpp_result_gen;
END_RCPP
}
// sorted_snp_df
bool sorted_snp_df(const Rcpp::DataFrame& snp_info);
RcppExport SEXP _ldshrink_sorted_snp_df(SEXP snp_infoSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const Rcpp::DataFrame& >::type snp_info(snp_infoSEXP);
    rcpp_result_gen = Rcpp::wrap(sorted_snp_df(snp_info));
    return rcpp_result_gen;
END_RCPP
}
// set_ld_region
Rcpp::IntegerVector set_ld_region(const Rcpp::DataFrame& ld_regions, const Rcpp::DataFrame& snp_info, const bool assign_all);
RcppExport SEXP _ldshrink_set_ld_region(SEXP ld_regionsSEXP, SEXP snp_infoSEXP, SEXP assign_allSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const Rcpp::DataFrame& >::type ld_regions(ld_regionsSEXP);
    Rcpp::traits::input_parameter< const Rcpp::DataFrame& >::type snp_info(snp_infoSEXP);
    Rcpp::traits::input_parameter< const bool >::type assign_all(assign_allSEXP);
    rcpp_result_gen = Rcpp::wrap(set_ld_region(ld_regions, snp_info, assign_all));
    return rcpp_result_gen;
END_RCPP
}
// interpolate_genetic_map
Rcpp::NumericVector interpolate_genetic_map(const Rcpp::NumericVector& map, const Rcpp::IntegerVector map_pos, const Rcpp::IntegerVector target_pos, const bool strict, const bool progress);
RcppExport SEXP _ldshrink_interpolate_genetic_map(SEXP mapSEXP, SEXP map_posSEXP, SEXP target_posSEXP, SEXP strictSEXP, SEXP progressSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const Rcpp::NumericVector& >::type map(mapSEXP);
    Rcpp::traits::input_parameter< const Rcpp::IntegerVector >::type map_pos(map_posSEXP);
    Rcpp::traits::input_parameter< const Rcpp::IntegerVector >::type target_pos(target_posSEXP);
    Rcpp::traits::input_parameter< const bool >::type strict(strictSEXP);
    Rcpp::traits::input_parameter< const bool >::type progress(progressSEXP);
    rcpp_result_gen = Rcpp::wrap(interpolate_genetic_map(map, map_pos, target_pos, strict, progress));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_ldshrink_ldshrink_cor", (DL_FUNC) &_ldshrink_ldshrink_cor, 3},
    {"_ldshrink_sample_cor", (DL_FUNC) &_ldshrink_sample_cor, 3},
    {"_ldshrink_flip_allele", (DL_FUNC) &_ldshrink_flip_allele, 4},
    {"_ldshrink_sorted_snp_df", (DL_FUNC) &_ldshrink_sorted_snp_df, 1},
    {"_ldshrink_set_ld_region", (DL_FUNC) &_ldshrink_set_ld_region, 3},
    {"_ldshrink_interpolate_genetic_map", (DL_FUNC) &_ldshrink_interpolate_genetic_map, 5},
    {NULL, NULL, 0}
};

RcppExport void R_init_ldshrink(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
